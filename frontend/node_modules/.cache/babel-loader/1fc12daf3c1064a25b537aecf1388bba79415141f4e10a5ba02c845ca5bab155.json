{"ast":null,"code":"var _jsxFileName = \"/Users/benliu/econo-sentimental-analysis/frontend/src/pages/home/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios, { all } from 'axios';\nimport './home.css';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { logo } from './Context AI Logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst companyNames = ['Apple', 'Microsoft', 'Google', 'Amazon', 'Meta', 'Tesla', 'Goldman Sachs'];\nfunction Home() {\n  _s();\n  const [companyName, setCompanyName] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [combinedData, setCombinedData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const handleInputChange = event => {\n    const inputValue = event.target.value;\n    setCompanyName(inputValue);\n    if (inputValue.length > 0) {\n      const regex = new RegExp(`^${inputValue}`, 'i');\n      setSuggestions(companyNames.sort().filter(v => regex.test(v)));\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const onSuggestionClick = value => {\n    setCompanyName(value);\n    setSuggestions([]);\n  };\n  const handleKeyPress = event => {\n    // It will trigger by pressing the Enter key\n    if (event.key === 'Enter' && (isSubmitted === false || isLoading === false)) {\n      runAnalysis();\n    }\n  };\n  const runAnalysis = async () => {\n    try {\n      setIsSubmitted(true);\n      setIsLoading(true);\n      document.getElementById('loadingSpinner').style.display = 'block';\n      const response = await axios.get(`/get_articles_by_quarter?company_name=${encodeURIComponent(companyName)}`);\n      console.log(response.data);\n      const all_clean_data = response.data;\n      generateGraph(\"Close\", all_clean_data).then(() => {\n        // Once the function has finished processing, hide the spinner\n        document.getElementById('loadingSpinner').style.display = 'none';\n        setIsLoading(false);\n      }).catch(error => {\n        console.error('An error occurred:', error);\n        // Even if there's an error, hide the spinner\n        document.getElementById('loadingSpinner').style.display = 'none';\n        setIsLoading(false);\n      });\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n      // Handle error appropriately\n    }\n  };\n\n  const generateGraph = async (metric, all_clean_data) => {\n    try {\n      const data = all_clean_data[\"data\"];\n      const predictions = all_clean_data[\"predictions\"];\n      console.log(data['x_vals']);\n      console.log(predictions['x_vals']);\n      const allQuarters = data[\"x_vals\"].concat(predictions[\"x_vals\"]);\n      const dataFromDataFrame1 = {\n        datasets: [{\n          label: data['y_label'],\n          data: data['vals'],\n          // This should be your actual data\n          borderColor: 'rgb(255, 99, 132)',\n          // Color for Dataset 1\n          backgroundColor: 'rgba(255, 99, 132, 0.5)'\n        }]\n      };\n      const arr = Array(allQuarters.length - 3).fill(null).concat([data['vals'][data['vals'].length - 1]]);\n      const dataFromDataFrame2 = {\n        datasets: [{\n          label: predictions['y_label'],\n          data: arr.concat(predictions['vals']),\n          // This should be your actual data\n          borderColor: 'rgb(54, 162, 235)',\n          // Color for Dataset 2\n          backgroundColor: 'rgba(54, 162, 235, 0.5)'\n        }]\n      };\n      setCombinedData({\n        labels: allQuarters,\n        // make sure allQuarters is an array of labels\n        datasets: [...dataFromDataFrame1.datasets, ...dataFromDataFrame2.datasets]\n      });\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `search-container ${isSubmitted ? 'at-top' : 'centered'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"search-heading\",\n        children: \"Input a company name below!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: companyName,\n        onChange: handleInputChange,\n        onKeyDown: handleKeyPress,\n        placeholder: \"Enter company name\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions-container\",\n        children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-row\",\n          onClick: () => onSuggestionClick(suggestion),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"company-name\",\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loadingSpinner\",\n      className: \"spinner\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: combinedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"S3Fvt8/6fXx8ktB2DmNLLATkDZU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","axios","all","Line","logo","jsxDEV","_jsxDEV","companyNames","Home","_s","companyName","setCompanyName","suggestions","setSuggestions","isSubmitted","setIsSubmitted","isLoading","setIsLoading","combinedData","setCombinedData","labels","datasets","handleInputChange","event","inputValue","target","value","length","regex","RegExp","sort","filter","v","test","onSuggestionClick","handleKeyPress","key","runAnalysis","document","getElementById","style","display","response","get","encodeURIComponent","console","log","data","all_clean_data","generateGraph","then","catch","error","metric","predictions","allQuarters","concat","dataFromDataFrame1","label","borderColor","backgroundColor","arr","Array","fill","dataFromDataFrame2","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onKeyDown","placeholder","map","suggestion","index","onClick","id","_c","$RefreshReg$"],"sources":["/Users/benliu/econo-sentimental-analysis/frontend/src/pages/home/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios, { all } from 'axios';\nimport './home.css'\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { logo } from './Context AI Logo.png';\n\nconst companyNames = [\n    'Apple',\n    'Microsoft',\n    'Google',\n    'Amazon',\n    'Meta',\n    'Tesla',\n    'Goldman Sachs'\n  ];\n\nfunction Home() {\n  const [companyName, setCompanyName] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [combinedData, setCombinedData] = useState({\n    labels: [],\n    datasets: []\n  });\n\n  const handleInputChange = (event) => {\n    const inputValue = event.target.value;\n    setCompanyName(inputValue);\n    if (inputValue.length > 0) {\n        const regex = new RegExp(`^${inputValue}`, 'i');\n        setSuggestions(companyNames.sort().filter(v => regex.test(v)));\n      } else {\n        setSuggestions([]);\n      }\n  };\n\n  const onSuggestionClick = (value) => {\n    setCompanyName(value);\n    setSuggestions([]);\n  };\n\nconst handleKeyPress = (event) => {\n    // It will trigger by pressing the Enter key\n    if (event.key === 'Enter' && (isSubmitted === false || isLoading === false)) {\n        runAnalysis();\n    }\n};\n\nconst runAnalysis = async () => {\n    try {\n        setIsSubmitted(true);\n        setIsLoading(true);\n        document.getElementById('loadingSpinner').style.display = 'block';\n        const response = await axios.get(`/get_articles_by_quarter?company_name=${encodeURIComponent(companyName)}`);\n        console.log(response.data);\n        const all_clean_data = response.data;\n        generateGraph(\"Close\", all_clean_data).then(() => {\n            // Once the function has finished processing, hide the spinner\n            document.getElementById('loadingSpinner').style.display = 'none';\n            setIsLoading(false);\n          }).catch((error) => {\n            console.error('An error occurred:', error);\n            // Even if there's an error, hide the spinner\n            document.getElementById('loadingSpinner').style.display = 'none';\n            setIsLoading(false);\n          });\n    } catch (error) {\n        console.error('Error fetching articles:', error);\n        // Handle error appropriately\n    }\n};\n\n    const generateGraph = async (metric, all_clean_data) => {\n        try {\n            const data = all_clean_data[\"data\"];\n            const predictions = all_clean_data[\"predictions\"];\n            console.log(data['x_vals']);\n            console.log(predictions['x_vals']);\n            const allQuarters = data[\"x_vals\"].concat(predictions[\"x_vals\"]);\n            const dataFromDataFrame1 = {\n                datasets: [\n                  {\n                    label: data['y_label'],\n                    data: data['vals'], // This should be your actual data\n                    borderColor: 'rgb(255, 99, 132)', // Color for Dataset 1\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                  },\n                ],\n              };\n            const arr = Array(allQuarters.length-3).fill(null).concat([data['vals'][data['vals'].length-1]]);\n            const dataFromDataFrame2 = {\n            datasets: [\n                { \n                label: predictions['y_label'],\n                data: arr.concat(predictions['vals']), // This should be your actual data\n                borderColor: 'rgb(54, 162, 235)', // Color for Dataset 2\n                backgroundColor: 'rgba(54, 162, 235, 0.5)',\n                },\n            ],\n            };\n            setCombinedData({\n                labels: allQuarters, // make sure allQuarters is an array of labels\n                datasets: [...dataFromDataFrame1.datasets, ...dataFromDataFrame2.datasets],\n              });\n        } catch (error) {\n            console.error('Error fetching articles:', error);\n        }\n    }\n\n  return (\n    <div className=\"homepage\">\n        <div className={`search-container ${isSubmitted ? 'at-top' : 'centered'}`}>\n            <img src={logo}></img>\n            <h1 className=\"search-heading\">Input a company name below!</h1>\n            <input\n            type=\"text\"\n            value={companyName}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyPress}\n            placeholder=\"Enter company name\"\n            className=\"search-input\"\n            />\n            {suggestions.length > 0 && (<div className=\"suggestions-container\">\n                {suggestions.map((suggestion, index) => (\n                <div key={index} className=\"suggestion-row\" onClick={() => onSuggestionClick(suggestion)}>\n                    <span className =\"company-name\">{suggestion}</span>\n                </div>\n                ))}\n            </div>)}\n        </div>\n        <div id=\"loadingSpinner\" className=\"spinner\" style={{ display: 'none' }}></div>\n        <Line data={combinedData}/>\n        {/* {quarterToArticles.length > 0 && (\n        <div>\n            <h2>Articles</h2>\n            <ul>\n                {quarterToArticles.map(quarterArticles => (\n                    <li>\n                        {quarterArticles.map(article => (\n                        <div>\n                            <h3>Article from {article.publisher.title}</h3>\n                            <ul>\n                                <li>{article.title}</li>\n                                <li><a href={article.url}>{article.url}</a></li>\n                                <li>{article[\"published date\"]}</li>\n                            </ul>\n                        </div>\n                    ))}\n                    </li>\n                ))}\n            </ul>\n        </div>\n        )} */}\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,IAAIC,GAAG,QAAQ,OAAO;AAClC,OAAO,YAAY;AACnB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AACtB,SAASC,IAAI,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,GAAG,CACjB,OAAO,EACP,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,EACP,eAAe,CAChB;AAEH,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC;IAC/CoB,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACrCf,cAAc,CAACa,UAAU,CAAC;IAC1B,IAAIA,UAAU,CAACG,MAAM,GAAG,CAAC,EAAE;MACvB,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAE,IAAGL,UAAW,EAAC,EAAE,GAAG,CAAC;MAC/CX,cAAc,CAACN,YAAY,CAACuB,IAAI,CAAC,CAAC,CAACC,MAAM,CAACC,CAAC,IAAIJ,KAAK,CAACK,IAAI,CAACD,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,MAAM;MACLnB,cAAc,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EAED,MAAMqB,iBAAiB,GAAIR,KAAK,IAAK;IACnCf,cAAc,CAACe,KAAK,CAAC;IACrBb,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAEH,MAAMsB,cAAc,GAAIZ,KAAK,IAAK;IAC9B;IACA,IAAIA,KAAK,CAACa,GAAG,KAAK,OAAO,KAAKtB,WAAW,KAAK,KAAK,IAAIE,SAAS,KAAK,KAAK,CAAC,EAAE;MACzEqB,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC;EAED,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACAtB,cAAc,CAAC,IAAI,CAAC;MACpBE,YAAY,CAAC,IAAI,CAAC;MAClBqB,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,OAAO;MACjE,MAAMC,QAAQ,GAAG,MAAMzC,KAAK,CAAC0C,GAAG,CAAE,yCAAwCC,kBAAkB,CAAClC,WAAW,CAAE,EAAC,CAAC;MAC5GmC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;MAC1B,MAAMC,cAAc,GAAGN,QAAQ,CAACK,IAAI;MACpCE,aAAa,CAAC,OAAO,EAAED,cAAc,CAAC,CAACE,IAAI,CAAC,MAAM;QAC9C;QACAZ,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;QAChExB,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,CAACkC,KAAK,CAAEC,KAAK,IAAK;QAClBP,OAAO,CAACO,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C;QACAd,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;QAChExB,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACR,CAAC,CAAC,OAAOmC,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;IACJ;EACJ,CAAC;;EAEG,MAAMH,aAAa,GAAG,MAAAA,CAAOI,MAAM,EAAEL,cAAc,KAAK;IACpD,IAAI;MACA,MAAMD,IAAI,GAAGC,cAAc,CAAC,MAAM,CAAC;MACnC,MAAMM,WAAW,GAAGN,cAAc,CAAC,aAAa,CAAC;MACjDH,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC,QAAQ,CAAC,CAAC;MAC3BF,OAAO,CAACC,GAAG,CAACQ,WAAW,CAAC,QAAQ,CAAC,CAAC;MAClC,MAAMC,WAAW,GAAGR,IAAI,CAAC,QAAQ,CAAC,CAACS,MAAM,CAACF,WAAW,CAAC,QAAQ,CAAC,CAAC;MAChE,MAAMG,kBAAkB,GAAG;QACvBpC,QAAQ,EAAE,CACR;UACEqC,KAAK,EAAEX,IAAI,CAAC,SAAS,CAAC;UACtBA,IAAI,EAAEA,IAAI,CAAC,MAAM,CAAC;UAAE;UACpBY,WAAW,EAAE,mBAAmB;UAAE;UAClCC,eAAe,EAAE;QACnB,CAAC;MAEL,CAAC;MACH,MAAMC,GAAG,GAAGC,KAAK,CAACP,WAAW,CAAC5B,MAAM,GAAC,CAAC,CAAC,CAACoC,IAAI,CAAC,IAAI,CAAC,CAACP,MAAM,CAAC,CAACT,IAAI,CAAC,MAAM,CAAC,CAACA,IAAI,CAAC,MAAM,CAAC,CAACpB,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC;MAChG,MAAMqC,kBAAkB,GAAG;QAC3B3C,QAAQ,EAAE,CACN;UACAqC,KAAK,EAAEJ,WAAW,CAAC,SAAS,CAAC;UAC7BP,IAAI,EAAEc,GAAG,CAACL,MAAM,CAACF,WAAW,CAAC,MAAM,CAAC,CAAC;UAAE;UACvCK,WAAW,EAAE,mBAAmB;UAAE;UAClCC,eAAe,EAAE;QACjB,CAAC;MAEL,CAAC;MACDzC,eAAe,CAAC;QACZC,MAAM,EAAEmC,WAAW;QAAE;QACrBlC,QAAQ,EAAE,CAAC,GAAGoC,kBAAkB,CAACpC,QAAQ,EAAE,GAAG2C,kBAAkB,CAAC3C,QAAQ;MAC3E,CAAC,CAAC;IACR,CAAC,CAAC,OAAO+B,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAEH,oBACE9C,OAAA;IAAK2D,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrB5D,OAAA;MAAK2D,SAAS,EAAG,oBAAmBnD,WAAW,GAAG,QAAQ,GAAG,UAAW,EAAE;MAAAoD,QAAA,gBACtE5D,OAAA;QAAK6D,GAAG,EAAE/D;MAAK;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtBjE,OAAA;QAAI2D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/DjE,OAAA;QACAkE,IAAI,EAAC,MAAM;QACX9C,KAAK,EAAEhB,WAAY;QACnB+D,QAAQ,EAAEnD,iBAAkB;QAC5BoD,SAAS,EAAEvC,cAAe;QAC1BwC,WAAW,EAAC,oBAAoB;QAChCV,SAAS,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,EACD3D,WAAW,CAACe,MAAM,GAAG,CAAC,iBAAKrB,OAAA;QAAK2D,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAC7DtD,WAAW,CAACgE,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACnCxE,OAAA;UAAiB2D,SAAS,EAAC,gBAAgB;UAACc,OAAO,EAAEA,CAAA,KAAM7C,iBAAiB,CAAC2C,UAAU,CAAE;UAAAX,QAAA,eACrF5D,OAAA;YAAM2D,SAAS,EAAE,cAAc;YAAAC,QAAA,EAAEW;UAAU;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC,GAD7CO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNjE,OAAA;MAAK0E,EAAE,EAAC,gBAAgB;MAACf,SAAS,EAAC,SAAS;MAACzB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/EjE,OAAA,CAACH,IAAI;MAAC4C,IAAI,EAAE7B;IAAa;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAsB1B,CAAC;AAEV;AAAC9D,EAAA,CA5IQD,IAAI;AAAAyE,EAAA,GAAJzE,IAAI;AA8Ib,eAAeA,IAAI;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}