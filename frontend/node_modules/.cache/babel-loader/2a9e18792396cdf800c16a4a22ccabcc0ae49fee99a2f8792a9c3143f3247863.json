{"ast":null,"code":"var _jsxFileName = \"/Users/benliu/econo-sentimental-analysis/frontend/src/pages/home/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios, { all } from 'axios';\nimport './home.css';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst companyNames = ['Microsoft', 'Google', 'Amazon', 'Meta', 'Tesla', 'Goldman Sachs'];\nconst metrics = [\"Close\", \"Revenues\", \"EBIT\", \"Gross Profit\", \"Basic EPS\", \"Cost of Revenue\", \"Total Assets\", \"Total Liabilities\", \"Stockholder's Equity\", \"Operating Cash Flow\", \"Free Cash Flow\", \"Volume\"];\nfunction Home() {\n  _s();\n  const [companyName, setCompanyName] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [combinedData, setCombinedData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [metric, setMetric] = useState(metrics[0]);\n  const [allCleanData, setAllCleanData] = useState({\n    data: [],\n    predictions: []\n  });\n  const handleMetricChange = event => {\n    setMetric(event.target.value);\n    generateGraph(metric, allCleanData);\n  };\n  const handleInputChange = event => {\n    const inputValue = event.target.value;\n    setCompanyName(inputValue);\n    if (inputValue.length > 0) {\n      const regex = new RegExp(`^${inputValue}`, 'i');\n      setSuggestions(companyNames.sort().filter(v => regex.test(v)));\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const onSuggestionClick = value => {\n    setCompanyName(value);\n    setSuggestions([]);\n  };\n  const handleKeyPress = event => {\n    // It will trigger by pressing the Enter key\n    if (event.key === 'Enter' && (isSubmitted === false || isLoading === false)) {\n      runAnalysis();\n    }\n  };\n  const runAnalysis = async () => {\n    try {\n      setIsSubmitted(true);\n      setIsLoading(true);\n      const response = await axios.get(`/get_articles_by_quarter?company_name=${encodeURIComponent(companyName)}`);\n      console.log(response.data);\n      setAllCleanData(response.data);\n      generateGraph(metric, allCleanData).then(() => {\n        setIsLoading(false);\n      }).catch(error => {\n        console.error('An error occurred:', error);\n        setIsLoading(false);\n      });\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n      setIsLoading(false);\n      // Handle error appropriately\n    }\n  };\n\n  const generateGraph = async (metric, allCleanData) => {\n    try {\n      const data = allCleanData[\"data\"];\n      const predictions = allCleanData[\"predictions\"];\n      console.log(data['x_vals']);\n      console.log(predictions['x_vals']);\n      const allQuarters = data[\"x_vals\"].concat(predictions[\"x_vals\"]);\n      const dataFromDataFrame1 = {\n        datasets: [{\n          label: data['y_label'],\n          data: data['vals'],\n          // This should be your actual data\n          borderColor: 'rgb(255, 99, 132)',\n          // Color for Dataset 1\n          backgroundColor: 'rgba(255, 99, 132, 0.5)'\n        }]\n      };\n      const arr = Array(allQuarters.length - 3).fill(null).concat([data['vals'][data['vals'].length - 1]]);\n      const dataFromDataFrame2 = {\n        datasets: [{\n          label: predictions['y_label'],\n          data: arr.concat(predictions['vals']),\n          // This should be your actual data\n          borderColor: 'rgb(54, 162, 235)',\n          // Color for Dataset 2\n          backgroundColor: 'rgba(54, 162, 235, 0.5)'\n        }]\n      };\n      setCombinedData({\n        labels: allQuarters,\n        // make sure allQuarters is an array of labels\n        datasets: [...dataFromDataFrame1.datasets, ...dataFromDataFrame2.datasets]\n      });\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `search-container ${isSubmitted ? 'at-top' : 'centered'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo\",\n        src: \"/context-ai-logo.png\",\n        alt: \"Context AI Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"search-heading\",\n        children: \"Input a company name below!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: companyName,\n        onChange: handleInputChange,\n        onKeyDown: handleKeyPress,\n        placeholder: \"Enter company name\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions-container\",\n        children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-row\",\n          onClick: () => onSuggestionClick(suggestion),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"company-name\",\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `metric-selector ${isSubmitted ? '' : 'hidden'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"metric-select\",\n          children: \"Choose a metric: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"metric-select\",\n          value: metric,\n          onChange: handleMetricChange,\n          children: metrics.map((m, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: m,\n            children: m\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loadingSpinner\",\n      className: `spinner ${isLoading ? '' : 'hidden'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: combinedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"vppa3MlK5Qo3Y0G9UCYlrcM6phs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","axios","all","Line","jsxDEV","_jsxDEV","companyNames","metrics","Home","_s","companyName","setCompanyName","suggestions","setSuggestions","isSubmitted","setIsSubmitted","isLoading","setIsLoading","combinedData","setCombinedData","labels","datasets","metric","setMetric","allCleanData","setAllCleanData","data","predictions","handleMetricChange","event","target","value","generateGraph","handleInputChange","inputValue","length","regex","RegExp","sort","filter","v","test","onSuggestionClick","handleKeyPress","key","runAnalysis","response","get","encodeURIComponent","console","log","then","catch","error","allQuarters","concat","dataFromDataFrame1","label","borderColor","backgroundColor","arr","Array","fill","dataFromDataFrame2","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onKeyDown","placeholder","map","suggestion","index","onClick","htmlFor","id","m","_c","$RefreshReg$"],"sources":["/Users/benliu/econo-sentimental-analysis/frontend/src/pages/home/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios, { all } from 'axios';\nimport './home.css'\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nconst companyNames = [\n    'Microsoft',\n    'Google',\n    'Amazon',\n    'Meta',\n    'Tesla',\n    'Goldman Sachs'\n  ];\n\nconst metrics = [\"Close\", \"Revenues\", \"EBIT\", \"Gross Profit\", \"Basic EPS\", \"Cost of Revenue\",\n                 \"Total Assets\", \"Total Liabilities\", \"Stockholder's Equity\",\n                 \"Operating Cash Flow\", \"Free Cash Flow\", \"Volume\"];\n\nfunction Home() {\n  const [companyName, setCompanyName] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [combinedData, setCombinedData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [metric, setMetric] = useState(metrics[0]);\n  const [allCleanData, setAllCleanData] = useState({\n    data: [],\n    predictions: []\n  });\n\n  const handleMetricChange = (event) => {\n    setMetric(event.target.value);\n    generateGraph(metric, allCleanData);\n  };\n\n  const handleInputChange = (event) => {\n    const inputValue = event.target.value;\n    setCompanyName(inputValue);\n    if (inputValue.length > 0) {\n        const regex = new RegExp(`^${inputValue}`, 'i');\n        setSuggestions(companyNames.sort().filter(v => regex.test(v)));\n      } else {\n        setSuggestions([]);\n      }\n  };\n\n  const onSuggestionClick = (value) => {\n    setCompanyName(value);\n    setSuggestions([]);\n  };\n\nconst handleKeyPress = (event) => {\n    // It will trigger by pressing the Enter key\n    if (event.key === 'Enter' && (isSubmitted === false || isLoading === false)) {\n        runAnalysis();\n    }\n};\n\nconst runAnalysis = async () => {\n    try {\n        setIsSubmitted(true);\n        setIsLoading(true);\n        const response = await axios.get(`/get_articles_by_quarter?company_name=${encodeURIComponent(companyName)}`);\n        console.log(response.data);\n        setAllCleanData(response.data);\n        generateGraph(metric,allCleanData).then(() => {\n            setIsLoading(false);\n          }).catch((error) => {\n            console.error('An error occurred:', error);\n            setIsLoading(false);\n          });\n    } catch (error) {\n        console.error('Error fetching articles:', error);\n        setIsLoading(false);\n        // Handle error appropriately\n    }\n};\n\n    const generateGraph = async (metric, allCleanData) => {\n        try {\n            const data = allCleanData[\"data\"];\n            const predictions = allCleanData[\"predictions\"];\n            console.log(data['x_vals']);\n            console.log(predictions['x_vals']);\n            const allQuarters = data[\"x_vals\"].concat(predictions[\"x_vals\"]);\n            const dataFromDataFrame1 = {\n                datasets: [\n                  {\n                    label: data['y_label'],\n                    data: data['vals'], // This should be your actual data\n                    borderColor: 'rgb(255, 99, 132)', // Color for Dataset 1\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                  },\n                ],\n              };\n            const arr = Array(allQuarters.length-3).fill(null).concat([data['vals'][data['vals'].length-1]]);\n            const dataFromDataFrame2 = {\n            datasets: [\n                { \n                label: predictions['y_label'],\n                data: arr.concat(predictions['vals']), // This should be your actual data\n                borderColor: 'rgb(54, 162, 235)', // Color for Dataset 2\n                backgroundColor: 'rgba(54, 162, 235, 0.5)',\n                },\n            ],\n            };\n            setCombinedData({\n                labels: allQuarters, // make sure allQuarters is an array of labels\n                datasets: [...dataFromDataFrame1.datasets, ...dataFromDataFrame2.datasets],\n              });\n        } catch (error) {\n            console.error('Error fetching articles:', error);\n        }\n    }\n\n  return (\n    <div className=\"homepage\">\n        <div className={`search-container ${isSubmitted ? 'at-top' : 'centered'}`}>\n            <img className=\"logo\" src=\"/context-ai-logo.png\" alt=\"Context AI Logo\" />\n            <h1 className=\"search-heading\">Input a company name below!</h1>\n            <input\n            type=\"text\"\n            value={companyName}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyPress}\n            placeholder=\"Enter company name\"\n            className=\"search-input\"\n            />\n            {suggestions.length > 0 && (<div className=\"suggestions-container\">\n                {suggestions.map((suggestion, index) => (\n                <div key={index} className=\"suggestion-row\" onClick={() => onSuggestionClick(suggestion)}>\n                    <span className =\"company-name\">{suggestion}</span>\n                </div>\n                ))}\n            </div>)}\n            <div className={`metric-selector ${isSubmitted ? '' : 'hidden'}`}>\n                <label htmlFor=\"metric-select\">Choose a metric: </label>\n                <select id=\"metric-select\" value={metric} onChange={handleMetricChange}>\n                {metrics.map((m, index) => (\n                    <option key={index} value={m}>{m}</option>\n                ))}\n                </select>\n            </div>\n        </div>\n        <div id=\"loadingSpinner\" className={`spinner ${isLoading ? '' : 'hidden'}`}></div>\n        <Line data={combinedData}/>\n        {/* {quarterToArticles.length > 0 && (\n        <div>\n            <h2>Articles</h2>\n            <ul>\n                {quarterToArticles.map(quarterArticles => (\n                    <li>\n                        {quarterArticles.map(article => (\n                        <div>\n                            <h3>Article from {article.publisher.title}</h3>\n                            <ul>\n                                <li>{article.title}</li>\n                                <li><a href={article.url}>{article.url}</a></li>\n                                <li>{article[\"published date\"]}</li>\n                            </ul>\n                        </div>\n                    ))}\n                    </li>\n                ))}\n            </ul>\n        </div>\n        )} */}\n    </div>\n  );\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}