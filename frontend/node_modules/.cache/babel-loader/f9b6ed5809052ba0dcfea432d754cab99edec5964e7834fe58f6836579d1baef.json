{"ast":null,"code":"var _jsxFileName = \"/Users/benliu/econo-sentimental-analysis/frontend/src/pages/home/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst companyNames = ['Apple', 'Microsoft', 'Google', 'Amazon', 'Meta', 'Tesla', 'Goldman Sachs'];\nfunction Home() {\n  _s();\n  const [companyName, setCompanyName] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const handleInputChange = event => {\n    const inputValue = event.target.value;\n    setCompanyName(inputValue);\n    if (inputValue.length > 0) {\n      const regex = new RegExp(`^${inputValue}`, 'i');\n      setSuggestions(companyNames.sort().filter(v => regex.test(v)));\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const onSuggestionClick = value => {\n    setCompanyName(value);\n    setSuggestions([]);\n  };\n  const handleKeyPress = event => {\n    // It will trigger by pressing the Enter key\n    if (event.key === 'Enter') {\n      runAnalysis();\n    }\n  };\n  const runAnalysis = async () => {\n    try {\n      const quarterToArticles = getQuarterToArticles();\n      const sentimentSeries = performSentimentAnalysis(quarterToArticles);\n    } catch (error) {\n      console.error('Error running analysis:', error);\n      // Handle error appropriately\n    }\n  };\n\n  const getQuarterToArticles = async () => {\n    try {\n      setIsSubmitted(true);\n      const response = await axios.get(`/get_articles_by_quarter?company_name=${encodeURIComponent(companyName)}`);\n      return response.data;\n      // Assuming the response.data is the array of articles\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n      // Handle error appropriately\n    }\n  };\n\n  const performSentimentAnalysis = async quarterToArticles => {\n    try {\n      const sentimentResponse = await axios.post('/sentiment_analysis', {\n        \"quarter_to_articles\": quarterToArticles\n      });\n      return sentimentResponse.data;\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n      // Handle error appropriately\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `search-container ${isSubmitted ? 'at-top' : 'centered'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"search-heading\",\n        children: \"Input a company name below!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: companyName,\n        onChange: handleInputChange,\n        onKeyDown: handleKeyPress,\n        placeholder: \"Enter company name\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions-container\",\n        children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-row\",\n          onClick: () => onSuggestionClick(suggestion),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"company-name\",\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"2o3NW6IjOgUQKJJUJX3LCQqp4AE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","companyNames","Home","_s","companyName","setCompanyName","suggestions","setSuggestions","isSubmitted","setIsSubmitted","handleInputChange","event","inputValue","target","value","length","regex","RegExp","sort","filter","v","test","onSuggestionClick","handleKeyPress","key","runAnalysis","quarterToArticles","getQuarterToArticles","sentimentSeries","performSentimentAnalysis","error","console","response","get","encodeURIComponent","data","sentimentResponse","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onKeyDown","placeholder","map","suggestion","index","onClick","_c","$RefreshReg$"],"sources":["/Users/benliu/econo-sentimental-analysis/frontend/src/pages/home/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './home.css'\n\nconst companyNames = [\n    'Apple',\n    'Microsoft',\n    'Google',\n    'Amazon',\n    'Meta',\n    'Tesla',\n    'Goldman Sachs'\n  ];\n\nfunction Home() {\n  const [companyName, setCompanyName] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleInputChange = (event) => {\n    const inputValue = event.target.value;\n    setCompanyName(inputValue);\n    if (inputValue.length > 0) {\n        const regex = new RegExp(`^${inputValue}`, 'i');\n        setSuggestions(companyNames.sort().filter(v => regex.test(v)));\n      } else {\n        setSuggestions([]);\n      }\n  };\n\n  const onSuggestionClick = (value) => {\n    setCompanyName(value);\n    setSuggestions([]);\n  };\n\nconst handleKeyPress = (event) => {\n    // It will trigger by pressing the Enter key\n    if (event.key === 'Enter') {\n        runAnalysis();\n    }\n};\n\nconst runAnalysis = async () => {\n    try {\n        const quarterToArticles = getQuarterToArticles();\n        const sentimentSeries = performSentimentAnalysis(quarterToArticles);\n    } catch (error) {\n        console.error('Error running analysis:', error);\n        // Handle error appropriately\n    }\n}\n\nconst getQuarterToArticles = async () => {\n    try {\n        setIsSubmitted(true);\n        const response = await axios.get(`/get_articles_by_quarter?company_name=${encodeURIComponent(companyName)}`);\n        return response.data;\n        // Assuming the response.data is the array of articles\n    } catch (error) {\n        console.error('Error fetching articles:', error);\n        // Handle error appropriately\n    }\n};\n\nconst performSentimentAnalysis = async (quarterToArticles) => {\n    try {\n        const sentimentResponse = await axios.post('/sentiment_analysis', {\n            \"quarter_to_articles\": quarterToArticles\n        });\n        return sentimentResponse.data;\n\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n      // Handle error appropriately\n    }\n  };\n\n\n  return (\n    <div className=\"homepage\">\n        <div className={`search-container ${isSubmitted ? 'at-top' : 'centered'}`}>\n            <h1 className=\"search-heading\">Input a company name below!</h1>\n            <input\n            type=\"text\"\n            value={companyName}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyPress}\n            placeholder=\"Enter company name\"\n            className=\"search-input\"\n            />\n            {suggestions.length > 0 && (<div className=\"suggestions-container\">\n                {suggestions.map((suggestion, index) => (\n                <div key={index} className=\"suggestion-row\" onClick={() => onSuggestionClick(suggestion)}>\n                    <span className =\"company-name\">{suggestion}</span>\n                </div>\n                ))}\n            </div>)}\n        </div>\n        {/* {quarterToArticles.length > 0 && (\n        <div>\n            <h2>Articles</h2>\n            <ul>\n                {quarterToArticles.map(quarterArticles => (\n                    <li>\n                        {quarterArticles.map(article => (\n                        <div>\n                            <h3>Article from {article.publisher.title}</h3>\n                            <ul>\n                                <li>{article.title}</li>\n                                <li><a href={article.url}>{article.url}</a></li>\n                                <li>{article[\"published date\"]}</li>\n                            </ul>\n                        </div>\n                    ))}\n                    </li>\n                ))}\n            </ul>\n        </div>\n        )} */}\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,YAAY,GAAG,CACjB,OAAO,EACP,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,EACP,eAAe,CAChB;AAEH,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMa,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACrCT,cAAc,CAACO,UAAU,CAAC;IAC1B,IAAIA,UAAU,CAACG,MAAM,GAAG,CAAC,EAAE;MACvB,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAE,IAAGL,UAAW,EAAC,EAAE,GAAG,CAAC;MAC/CL,cAAc,CAACN,YAAY,CAACiB,IAAI,CAAC,CAAC,CAACC,MAAM,CAACC,CAAC,IAAIJ,KAAK,CAACK,IAAI,CAACD,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,MAAM;MACLb,cAAc,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EAED,MAAMe,iBAAiB,GAAIR,KAAK,IAAK;IACnCT,cAAc,CAACS,KAAK,CAAC;IACrBP,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAEH,MAAMgB,cAAc,GAAIZ,KAAK,IAAK;IAC9B;IACA,IAAIA,KAAK,CAACa,GAAG,KAAK,OAAO,EAAE;MACvBC,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC;EAED,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,iBAAiB,GAAGC,oBAAoB,CAAC,CAAC;MAChD,MAAMC,eAAe,GAAGC,wBAAwB,CAACH,iBAAiB,CAAC;IACvE,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;IACJ;EACJ,CAAC;;EAED,MAAMH,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACAlB,cAAc,CAAC,IAAI,CAAC;MACpB,MAAMuB,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAG,CAAE,yCAAwCC,kBAAkB,CAAC9B,WAAW,CAAE,EAAC,CAAC;MAC5G,OAAO4B,QAAQ,CAACG,IAAI;MACpB;IACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;IACJ;EACJ,CAAC;;EAED,MAAMD,wBAAwB,GAAG,MAAOH,iBAAiB,IAAK;IAC1D,IAAI;MACA,MAAMU,iBAAiB,GAAG,MAAMtC,KAAK,CAACuC,IAAI,CAAC,qBAAqB,EAAE;QAC9D,qBAAqB,EAAEX;MAC3B,CAAC,CAAC;MACF,OAAOU,iBAAiB,CAACD,IAAI;IAEjC,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;;EAGD,oBACE9B,OAAA;IAAKsC,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBvC,OAAA;MAAKsC,SAAS,EAAG,oBAAmB9B,WAAW,GAAG,QAAQ,GAAG,UAAW,EAAE;MAAA+B,QAAA,gBACtEvC,OAAA;QAAIsC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/D3C,OAAA;QACA4C,IAAI,EAAC,MAAM;QACX9B,KAAK,EAAEV,WAAY;QACnByC,QAAQ,EAAEnC,iBAAkB;QAC5BoC,SAAS,EAAEvB,cAAe;QAC1BwB,WAAW,EAAC,oBAAoB;QAChCT,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,EACDrC,WAAW,CAACS,MAAM,GAAG,CAAC,iBAAKf,OAAA;QAAKsC,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAC7DjC,WAAW,CAAC0C,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACnClD,OAAA;UAAiBsC,SAAS,EAAC,gBAAgB;UAACa,OAAO,EAAEA,CAAA,KAAM7B,iBAAiB,CAAC2B,UAAU,CAAE;UAAAV,QAAA,eACrFvC,OAAA;YAAMsC,SAAS,EAAE,cAAc;YAAAC,QAAA,EAAEU;UAAU;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC,GAD7CO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAsBL,CAAC;AAEV;AAACxC,EAAA,CA3GQD,IAAI;AAAAkD,EAAA,GAAJlD,IAAI;AA6Gb,eAAeA,IAAI;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}